// Convert a Base64 string back to the original string
const base64String =
  "";
const decodedString = Buffer.from(base64String, "base64").toString("utf-8");

console.log("Base64 Decoded:", decodedString);
